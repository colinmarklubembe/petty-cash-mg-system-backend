datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                  String        @id @default(auto()) @map("_id") @db.ObjectId
  email               String        @unique
  password            String
  firstName           String
  middleName          String?
  lastName            String
  isVerified          Boolean       @default(false)
  verificationToken   String?
  forgotPasswordToken String?
  isActivated         Boolean       @default(false)
  createdAt           DateTime?
  updatedAt           DateTime?
  userCompanies       UserCompany[]
}

model Company {
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  description   String?
  address       Address
  phoneNumber   String
  companyEmail  String        @unique
  createdAt     DateTime?
  updatedAt     DateTime?
  userCompanies UserCompany[]
}

model Requisition {
  id                String            @id @default(auto()) @map("_id") @db.ObjectId
  title             String
  userId            String            @db.ObjectId
  description       String?
  amount            Float
  requisitionStatus RequisitionStatus @default(DRAFTS)
  pettyCashFundId   String            @db.ObjectId
  pettyCashFund     PettyCashFund     @relation(fields: [pettyCashFundId], references: [id])
  transactions      Transaction[]
  createdAt         DateTime?
  updatedAt         DateTime?
}

model PettyCashFund {
  id             String        @id @default(auto()) @map("_id") @db.ObjectId
  currentBalance Float
  totalSpent     Float?
  totalAdded     Float?
  createdAt      DateTime?
  updatedAt      DateTime?
  userId         String        @db.ObjectId
  requisitions   Requisition[]
  transactions   Transaction[]
}

model Transaction {
  id              String          @id @default(auto()) @map("_id") @db.ObjectId
  userId          String          @db.ObjectId
  amount          Float
  type            TransactionType
  pettyCashFundId String          @db.ObjectId
  requisitionId   String?         @db.ObjectId
  requisition     Requisition?    @relation(fields: [requisitionId], references: [id])
  pettyCashFund   PettyCashFund   @relation(fields: [pettyCashFundId], references: [id])
  createdAt       DateTime?
  updatedAt       DateTime?
}

model UserCompany {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  userId    String    @db.ObjectId
  companyId String    @db.ObjectId
  role      Role      @default(EMPLOYEE)
  createdAt DateTime?
  updatedAt DateTime?

  user    User    @relation(fields: [userId], references: [id])
  company Company @relation(fields: [companyId], references: [id])

  @@unique([userId, companyId])
}

enum RequisitionStatus {
  DRAFTS
  PENDING
  APPROVED
  REJECTED
}

enum TransactionType {
  DEBIT
  CREDIT
}

enum Role {
  EMPLOYEE
  FINANCE
  ADMIN
}

type Address {
  street  String?
  city    String?
  state   String?
  country String?
}
